@model EStateDevelopment.Areas.Admin.ViewModel.UserViewModel
@{
    ViewBag.Title = "AddUser";
    Layout = "~/Views/Shared/_Layout-Admin.cshtml";
}

<script src="~/Scripts/jquery-1.8.0.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<div class="card stacked-form">
    <div class="card-header ">
        <h5 class="card-title">Manage New User Account</h5>
        @if (TempData["response"] != null)
        {
            <div class="alert alert-danger" id="msgalert">
                @TempData["response"].ToString()
            </div>
        }
    </div>
    <div class="card-body ">
        @using (Html.BeginForm("AddUser", "Admin", FormMethod.Post))
        {

            <div class="row">
                <div class="form-group col-md-5 mr-auto ml-auto">
                    @Html.EditorFor(model => model.firstname, new { htmlAttributes = new { @class = "form-control", placeholder = "First Name", } })
                    @Html.ValidationMessageFor(model => model.firstname, "", new { @class = "text-danger db" })



                </div>
                <div class="form-group col-md-5 mr-auto ml-auto">
                    @Html.EditorFor(model => model.lastname, new { htmlAttributes = new { @class = "form-control", placeholder = "Last Name", } })
                    @Html.ValidationMessageFor(model => model.lastname, "", new { @class = "text-danger db" })

                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-5 mr-auto ml-auto">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Email", } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger db" })
                </div>
                <div class="form-group col-md-5 mr-auto ml-auto">
                    @Html.EditorFor(model => model.mobile, new { htmlAttributes = new { @class = "form-control", placeholder = "Mobile Number", } })
                    @Html.ValidationMessageFor(model => model.mobile, "", new { @class = "text-danger db" })

                </div>
            </div>

            <div class="row">
                <div class="form-group col-md-5 mr-auto ml-auto">
                    @Html.EditorFor(model => model.state, new { htmlAttributes = new { @class = "form-control", placeholder = "State" } })
                    @Html.ValidationMessageFor(model => model.state, "", new { htmlAttributes = new { @class = "text-danger db" } })
                </div>
                <div class="form-group col-md-5 mr-auto ml-auto">
                    @Html.EditorFor(model => model.city, new { htmlAttributes = new { @class = "form-control", placeholder = "City" } })
                    @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger db" })


                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-5 mr-auto ml-auto">
                    @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control", placeholder = "Address*" } })
                    @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger db" })

                </div>
                <div class="form-group col-md-5 mr-auto ml-auto">
                    @Html.EditorFor(model => model.NationalID, new { htmlAttributes = new { @class = "form-control", placeholder = "National ID*" } })
                    @Html.ValidationMessageFor(model => model.NationalID, "", new { @class = "text-danger db" })

                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-5 mr-auto ml-auto">
                    @Html.PasswordFor(model => model.PasswordHash, new { @class = "form-control ", placeholder = "Password*" })
                    @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger db" })

                </div>
                <div class="form-group col-md-5 mr-auto ml-auto">
                    @Html.PasswordFor(model => model.ConfirmPasswordHash, new { @class = "form-control", placeholder = "Confirm Password*" })
                    @Html.ValidationMessageFor(model => model.ConfirmPasswordHash, "", new { @class = "text-danger db" })
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-5 mr-auto ml-auto">
                    @Html.DropDownList("role_id", (IEnumerable<SelectListItem>)ViewBag.RoleId, "--- Select User Role ---", new { @class = "form-control form-control form-control-rounded" })
                    @Html.ValidationMessageFor(model => model.role_id, "", new { @class = "text-danger" })


                </div>
                <div class="form-group col-md-5 mr-auto ml-auto">
                </div>
            </div>
            <!--<div class="row">
                <div class="form-group col-md-7 mr-auto ml-auto">
                    <div class="fileinput fileinput-new text-center" data-provides="fileinput">
                        <div class="fileinput-new thumbnail img-raised">
                            @{
                                var _pics = "http://style.anu.edu.au/_anu/4/images/placeholders/person_8x10.png";
                                if (!string.IsNullOrEmpty(Model.imageupload))
                                {
                                    _pics = Model.imageupload;
                                }

                            }
                            <img src="@_pics" alt="...">-->



            @*<img src="@_pics" rel="nofollow" alt="...">*@
            <!--</div>
                        <div class="fileinput-preview fileinput-exists thumbnail img-raised"></div>
                        <div>
                            <span class="btn btn-raised btn-round btn-default btn-file">
                                <span class="fileinput-new">Select image</span>
                                <span class="fileinput-exists">Change</span>
                                <input type="file" name="imageupload" />
                            </span>
                            <a href="javascript:;" class="btn btn-danger btn-round fileinput-exists" data-dismiss="fileinput"><i class="fa fa-times"></i> Remove</a>
                        </div>
                    </div>
















                </div>

            </div>-->
            <div class="card-footer col-md-12 mr-auto ml-auto">
                <button type="submit" class="btn btn-fill btn-info btn-wd pull-right">Submit</button>
            </div>
        }
    </div>

</div>
<script>
    setTimeout(function () {
        $("#msgalert").hide();
    }, 3500);
</script>