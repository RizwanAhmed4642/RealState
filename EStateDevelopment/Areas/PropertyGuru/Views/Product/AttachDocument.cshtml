@model IEnumerable<EStateDevelopment.Data.Product>
@{
    ViewBag.Title = "AttachDocument";
    Layout = "~/Views/Shared/_Layout-Admin.cshtml";
}


<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="jquery-3.5.1.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

<script>
    $(document).ready(function () {

        $('#table_1').DataTable();
        $("#xyz").hide();
       
        $(document).on('click', '#btnShow', function () {
            $("#xyz").show();
        });
    });

    var pID;

    function onloaded(id) {
        
        pID = id;
        //alert(pID);
    }

    function myfunction() {

        var ID = pID;
        /*alert(ID);*/

        var doc = {
            ProductID: ID,
            ProductDocumentTypeID: $("#doc_type").val(),
            UploadedDocument: $("#doc_Name").val(),
            UploadedDocumentPath: $("#doc_upload").val()
        }

        var fileUpload = $("#doc_upload").get(0);
        var files = fileUpload.files;

        // Create  a FormData object
        var fileData = new FormData();

        // if there are multiple files , loop through each files
        for (var i = 0; i < files.length; i++) {
            fileData.append(files[i].name, files[i]);
            
        }

        fileData.append("productid", ID)
        fileData.append("prodocid", $("#doc_type").val())
        fileData.append("docName", $("#doc_Name").val())


        
        //// Adding more keys/values here if need
        //fileData.append(ProductID, ID);
        //fileData.append(ProductDocumentTypeID, $("#doc_type").val())

       
     
        $.ajax({               

            url: '/Product/uploadDocument', //URL to upload files 
            type: "POST", //as we will be posting files and other method POST is used
            processData: false, //remember to set processData and ContentType to false, otherwise you may get an error
            contentType: false,
            data:

                fileData,
             
                //success: function (result) {
                //    alert(result);
                //},
                //error: function (err) {
                //    alert(err.statusText);
                //}
            

            //type: "POST",
            //url: '/Product/uploadDocument',
            //data:
            //{

            //    //ProductID: ID,
            //    //ProductDocumentTypeID: $("#doc_type").val(),
            //    //UploadedDocument: $("#doc_Name").val(),
            //    //UploadedDocumentPath: $("#doc_upload").val()
            //}
        });
    }

</script>


<div class="container">
    <div class="content">

        <div class="card stacked-form" style="border:none;">
            <div class="card text-center" style="background-color:whitesmoke;border:none;">
                <div class="card-header" style="background-color:whitesmoke">
                    <div class="row">
                        <div class="col-md-12 adj-gridhead ">
                            <h4>Product's Documents<small>(Property Guru)</small></h4>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="card-text">
                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.</p>
                    </div>
                </div>
            </div>
            <div class="col-md-12" style="background-color:white; border-style:hidden">
                <table id="table_1" class="table" cellspacing="0" width="100%" style="width:100%;">
                    <thead class="thead-light" style="background-color:whitesmoke">
                        <tr>
                            <th>@Html.DisplayNameFor(model => model.ProductID)</th>
                            <th>@Html.DisplayNameFor(model => model.Name)</th>
                            <th>@Html.DisplayNameFor(model => model.ProductType)</th>
                            <th>@Html.DisplayNameFor(model => model.ApprovalStatus)</th>
                            <th>@Html.DisplayNameFor(model => model.ProductCharges.ElementAt(0).ProductChargesType.ChargesSlabs.ElementAt(0).MinAmount)</th>
                            <th>@Html.DisplayNameFor(model => model.ProductCharges.ElementAt(0).ProductChargesType.ChargesSlabs.ElementAt(0).MaxAmount)</th>
                            <th>@Html.DisplayNameFor(model => model.RateofReturn)</th>
                            <th>@Html.DisplayNameFor(model => model.UserEmail)</th>
                            <th>Attach Document</th>
                        </tr>
                    </thead>
                    <tbody>
                       
                        @foreach (var P in Model)
                        {
                            
                            if (P.ApprovalStatus == true && P.RejectedStatus == false)
                            {

                               <tr>
                                    <td>@P.ProductID</td>
                                    <td>@P.Name</td>
                                    <td>@P.ProductType</td>
                                    <td>@P.ApprovalStatus</td>
                                    <td>@P.ProductCharges.ElementAt(0).ProductChargesType.ChargesSlabs.ElementAt(0).ChargesAmount</td>
                                    <th>@P.ProductCharges.ElementAt(0).ProductChargesType.ChargesSlabs.ElementAt(0).MaxAmount</th>
                                    <td>@P.RateofReturn</td>
                                    <td>@P.UserEmail</td>
                                    @*<input type="text" value="@P.ProductID" id="ProductID" />*@
                                    <th><a href="#" onclick="onloaded(@P.ProductID)"  id="btnShow" style="color:black" ><b>Select</b></a></th>

                                </tr>

                            }
                        }
                    </tbody>
                </table>
            </div>
            <br />
            <div id="xyz" class="col-md-12" style="background-color:white;">
                <h4 class="text-center">
                    <b>Attach Document Against Selected Product</b>
                </h4>




                    @Html.AntiForgeryToken()

                    <div class="form-row">
                        <div class="form-group col-md-6">
                            @Html.DropDownList("DocumentType", (IEnumerable<SelectListItem>)ViewBag.ProductDocumentTypes, "------Select Document Type------", new { id = "doc_type", @class = "form-control form-control form-control-rounded" })
                            @*@Html.ValidationMessageFor(model => model.ProductID, "", new { @class = "text-danger" })*@
                        </div>
                        <div class="form-group col-md-6">
                            <input id="doc_Name" type="text" class="form-control " placeholder="Document Name" required />
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <input type="file" name="files" class="form-control" id="doc_upload" placeholder="Upload Document" required>
                        </div>
                    </div>
                    <div class="form-row">

                        <div class="col-md-12 ml-auto">
                            <button onclick="myfunction();" value="uploadDocument" class="btn btn-fill btn-outline-dark btn-wd fr" style="background-color:lightgray;color:black">Upload</button>
                        </div>
                    </div>

               
                    @*<div class="form-group">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", placeholder = "Product Description" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div*@

                </div>

        </div>
    </div>
</div>
